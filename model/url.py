from model.model import Model
from py.helper import Helper


class URL(Model):
    TABLE = 'urls'
    COLS_IGNORE = []
    COLS_EXE_FCT = ['public_id']
    PUBLIC_ID_LENGTH = 5
    CACHED = {}

    def __init__(self):
        params = {
            'table_name': self.TABLE
        }
        super().__init__(**params)

    def insert(self, data):
        # public_id column generated by generate_public_id('urls'::text, 5) function so no need to insert
        data['public_id'] = f"generate_public_id('{self.TABLE}'::text, {self.PUBLIC_ID_LENGTH})"
        data['destination_link_hash'] = Helper.calculate_md5_hash(data['destination_link'])
        return super().insert(data)

    def get_by_destination_link(self, destination_link):
        destination_link_hash = Helper.calculate_md5_hash(destination_link)
        return self.get_by_field('destination_link_hash', destination_link_hash)

    def get_by_alias_name_or_public_id(self, alias_name_or_public_id):
        from model.url_alias import URL_Alias
        query = f"""
            SELECT * FROM {self.TABLE} u 
                LEFT JOIN {URL_Alias.TABLE} ua
                    ON u.id = ua.url_id 
            WHERE COALESCE (ua.alias_name, ua.public_id) = %(alias_name_or_public_id)s
        """
        row = self.fetch_one(query, params={'alias_name_or_public_id': alias_name_or_public_id})
        if row:
            self.data = row
            return self
        return None

    def get_total_alias_name_by_destination_link(self, destination_link):
        from model.url_alias import URL_Alias
        destination_link_hash = Helper.calculate_md5_hash(destination_link)
        query = f"""
            SELECT COUNT(*) AS total_count FROM {self.TABLE} u 
                LEFT JOIN {URL_Alias.TABLE} ua
                    ON u.public_id = ua.url_public_id 
            WHERE u.destination_link_hash = %(destination_link_hash)s
        """
        row = self.fetch_one(query, params={'destination_link_hash': destination_link_hash})
        if row:
            return row['total_count']
        return 0

